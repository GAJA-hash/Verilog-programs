Gate level Modeling:
module rippleadd(s,cout,a,b);
output[7:0]s;
output cout;
input[7:0]a,b;
wire cin =1'b0;
wire c1,c2,c3,c4,c5,c6,c7;

fulladd fa0(s[0],c1,a[0],b[0],cin);
fulladd fa1(s[1],c2,a[1],b[1],c1);
fulladd fa2(s[2],c3,a[2],b[2],c2);
fulladd fa3(s[3],c4,a[3],b[3],c3);
fulladd fa4(s[4],c5,a[4],b[4],c4);
fulladd fa5(s[5],c6,a[5],b[5],c5);
fulladd fa6(s[6],c7,a[6],b[6],c6);
fulladd fa7(s[7],cout,a[7],b[7],c7);
endmodule

//Description of Full Adder
module fulladd(sum,carry,a,b,c);
input a,b,c;
output sum,carry;
wire d,e,f;
xor(sum,a,b,c);
and(d,a,b);
and(e,b,c);
and(f,a,c);
or(carry,d,e,f);
endmodule

//Test  Bench
module  testbench;

reg [7:0]a,b;
wire [7:0]s;
wire cout;
rippleadd a1(s,cout,a,b);
initial
begin
#100a=8'b00001111;b=8'b10101010;
#100  a=8'b11111111;b=8'b11111111;
#100 a=8'b00000000;b=8'b10101010;
end 
endmodule
